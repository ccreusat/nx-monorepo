name: CI
on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # needed for provenance data generation
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Generate .npmrc
        run: |
          pnpm config set @ccreusat-monorepo:registry https://registry.npmjs.org
          pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
          pnpm config set auto-install-peers true
      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress # needed for the Cypress binary
          key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm install --frozen-lockfile
      - name: Cache npm dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress # needed for the Cypress binary
          key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}
      - run: pnpm nx run-many -t build
      - name: Version & Publish
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          echo "Your current branch is ${{ github.ref_name }}"

          pnpm nx release version --first-release
          pnpm nx release publish
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
